{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Mean-Variance-Std-Calculator","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOxUcjoyo/Cpp7iBZVLctsL"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["GitHub Source: https://github.com/freeCodeCamp/boilerplate-mean-variance-standard-deviation-calculator\n","\n","Create a function named calculate() in mean_var_std.py that uses Numpy to output the mean, variance, standard deviation, max, min, and sum of the rows, columns, and elements in a 3 x 3 matrix.\n","\n","The input of the function should be a list containing 9 digits. The function should convert the list into a 3 x 3 Numpy array, and then return a dictionary containing the mean, variance, standard deviation, max, min, and sum along both axes and for the flattened matrix."],"metadata":{"id":"iEWePmW6dght"}},{"cell_type":"code","source":["# Import library\n","import numpy as np "],"metadata":{"id":"gyT983_verFD","executionInfo":{"status":"ok","timestamp":1655583728699,"user_tz":420,"elapsed":11,"user":{"displayName":"Edmund Huan Sheng Lee","userId":"04202286057474005015"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["def calculate(list):\n","\n","    # Check input of the function is a list containing 9 digits\n","    if len(list) != 9:\n","        # Raise error\n","        raise ValueError('List must contain nine numbers.') \n","    else:\n","        # Convert the list into 3 x 3 numpy arrary\n","        matrix = np.array(list).reshape(3, 3)\n","\n","    # Using the function of numpy - mean, var, std, max, min, sum \n","    # list[0] = axis(0) - vertical down\n","    # list[1] = axis(1) - horizontal right\n","    # list[2] = flatten() - all value \n","\n","    # Calculate mean\n","    mean = [(matrix.mean(axis=0).tolist()), (matrix.mean(axis=1).tolist()),\n","            (matrix.flatten().mean())]\n","    \n","    # Calculate var\n","    var = [(matrix.var(axis=0).tolist()), (matrix.var(axis=1).tolist()),\n","           (matrix.flatten().var())]\n","    \n","    # Calculate std\n","    std = [(matrix.std(axis=0).tolist()), (matrix.std(axis=1).tolist()),\n","           (matrix.flatten().std())]\n","    \n","    # Calculate max\n","    max = [(matrix.max(axis=0).tolist()), (matrix.max(axis=1).tolist()),\n","           (matrix.flatten().max())]\n","    \n","    # Calculate min\n","    min = [(matrix.min(axis=0).tolist()), (matrix.min(axis=1).tolist()),\n","           (matrix.flatten().min())]\n","    \n","    # Calculate sum\n","    sum = [(matrix.sum(axis=0).tolist()), (matrix.sum(axis=1).tolist()),\n","           (matrix.flatten().sum())]\n","\n","    # Dictionary for all the calculated result \n","    calculations = {\n","        \"mean\": mean,\n","        \"variance\": var,\n","        \"standard deviation\": std,\n","        \"max\": max,\n","        \"min\": min,\n","        \"sum\": sum,\n","    }\n","    return calculations"],"metadata":{"id":"Yuu5YwX0eyKu","executionInfo":{"status":"ok","timestamp":1655583868277,"user_tz":420,"elapsed":317,"user":{"displayName":"Edmund Huan Sheng Lee","userId":"04202286057474005015"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tMX_WhmqdfwS","executionInfo":{"status":"ok","timestamp":1655584381233,"user_tz":420,"elapsed":11,"user":{"displayName":"Edmund Huan Sheng Lee","userId":"04202286057474005015"}},"outputId":"178bd098-6237-47fd-a177-462b8d960d0b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'max': [[6, 7, 8], [2, 5, 8], 8],\n"," 'mean': [[3.0, 4.0, 5.0], [1.0, 4.0, 7.0], 4.0],\n"," 'min': [[0, 1, 2], [0, 3, 6], 0],\n"," 'standard deviation': [[2.449489742783178,\n","   2.449489742783178,\n","   2.449489742783178],\n","  [0.816496580927726, 0.816496580927726, 0.816496580927726],\n","  2.581988897471611],\n"," 'sum': [[9, 12, 15], [3, 12, 21], 36],\n"," 'variance': [[6.0, 6.0, 6.0],\n","  [0.6666666666666666, 0.6666666666666666, 0.6666666666666666],\n","  6.666666666666667]}"]},"metadata":{},"execution_count":15}],"source":["calculate([0,1,2,3,4,5,6,7,8])"]},{"cell_type":"code","source":["calculate([9,1,5,3,3,3,2,9,0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T8Wv4XwZe_cH","executionInfo":{"status":"ok","timestamp":1655584374016,"user_tz":420,"elapsed":15,"user":{"displayName":"Edmund Huan Sheng Lee","userId":"04202286057474005015"}},"outputId":"1a767131-27eb-427f-fa15-2ce09122fc9a"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'max': [[9, 9, 5], [9, 3, 9], 9],\n"," 'mean': [[4.666666666666667, 4.333333333333333, 2.6666666666666665],\n","  [5.0, 3.0, 3.6666666666666665],\n","  3.888888888888889],\n"," 'min': [[2, 1, 0], [1, 3, 0], 0],\n"," 'standard deviation': [[3.0912061651652345,\n","   3.39934634239519,\n","   2.0548046676563256],\n","  [3.265986323710904, 0.0, 3.8586123009300755],\n","  3.0347778408328137],\n"," 'sum': [[14, 13, 8], [15, 9, 11], 35],\n"," 'variance': [[9.555555555555555, 11.555555555555557, 4.222222222222222],\n","  [10.666666666666666, 0.0, 14.888888888888891],\n","  9.209876543209875]}"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["calculate([2,6,2,8,4,0,1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":287},"id":"vuboq7SThSMJ","executionInfo":{"status":"error","timestamp":1655584454810,"user_tz":420,"elapsed":22,"user":{"displayName":"Edmund Huan Sheng Lee","userId":"04202286057474005015"}},"outputId":"73b6ff5e-59f4-499d-de5a-69e96382f9b3"},"execution_count":20,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-20-c174078172aa>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mcalculate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-12-46607b440bdd>\u001b[0m in \u001b[0;36mcalculate\u001b[0;34m(list)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mcalculate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;36m9\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'List must contain nine numbers.'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m         \u001b[0mmatrix\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: List must contain nine numbers."]}]},{"cell_type":"code","source":["calculate([2,6,2,8,4,0,1,5,7])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q85dd6WmhLgY","executionInfo":{"status":"ok","timestamp":1655584406360,"user_tz":420,"elapsed":11,"user":{"displayName":"Edmund Huan Sheng Lee","userId":"04202286057474005015"}},"outputId":"6e95fc8a-155c-4cd8-f130-14d3bc3b0f0a"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'max': [[8, 6, 7], [6, 8, 7], 8],\n"," 'mean': [[3.6666666666666665, 5.0, 3.0],\n","  [3.3333333333333335, 4.0, 4.333333333333333],\n","  3.888888888888889],\n"," 'min': [[1, 4, 0], [2, 0, 1], 0],\n"," 'standard deviation': [[3.091206165165235,\n","   0.816496580927726,\n","   2.943920288775949],\n","  [1.8856180831641267, 3.265986323710904, 2.494438257849294],\n","  2.6434171674156266],\n"," 'sum': [[11, 15, 9], [10, 12, 13], 35],\n"," 'variance': [[9.555555555555557, 0.6666666666666666, 8.666666666666666],\n","  [3.555555555555556, 10.666666666666666, 6.222222222222221],\n","  6.987654320987654]}"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":[""],"metadata":{"id":"ILxVPdpthZgG"},"execution_count":null,"outputs":[]}]}